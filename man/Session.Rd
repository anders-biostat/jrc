% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jrc.R
\name{Session}
\alias{Session}
\title{Session class}
\description{
Objects of this class handle all the incoming and outgoing messages for one active connection.
Please, avoid creating instances of this class manually. Each Session object is created when
a web socket is opened and serves as a wraper around it. Manually created object will not have
a web socket connection and thus is not functional.
}
\section{Fields}{

\describe{
   \item{\code{id}}{
      Automatically generated ID for this session. ID is a random combination of 6 letters or numbers.
      Please, do not change value this field.
   }
   \item{\code{lastActive}}{
      Time of the last received message via the session's websocket. The time is generated by
      \code{\link[base]{Sys.time}} function.
   }
   \item{\code{startTime}}{
      Time when this session has been started (generated by \code{\link[base]{Sys.time}} function).
   }
   \item{\code{maxN}}{
      Maximum number of messages that can be simultaneously stored for this session. Must be a single number.
      If \code{maxN = 0}, any message that requires authorization will be immediately discarded.
      If message storage is full, the oldest stored message will be removed, when a new one is stored. Default 
      value is \code{Inf}. 
   }
   \item{\code{maxSize}}{
      Maximum allowed size of the message storage in bytes. Must be a single number.
      If \code{maxSize = 0}, any message that requires authorization will be immediately discarded. If message stored is full,
      older messages will be removed, until either the allowed storage size is reached, or only one message remains. Default 
      value is \code{Inf}. 
   }
}
}

\section{Methods}{

\describe{
  \item{\code{getMessageIds()}}{
     returns IDs of all currently stored messages. ID is combination of 6 random letters and numbers,
     which is generated, when the message is stored.
  }
  \item{\code{authorize(messageId = NULL, show = FALSE)}}{ 
     authorizes evaluation of the message. Check \code{\link{authorize}} for more information.
  }
  \item{\code{removeMessage(messageId)}}{
     removes a stored message. This can also be done with \code{\link{authorize}} function (set
     \code{show = TRUE} and then select to ignore message).
  }
  \item{\code{sendCommand(command, wait = 0)}}{
     sends a JavaScript command to be evaluated on the web page. Check 
     \code{\link{sendCommand}} for more information.
  }
  \item{\code{callFunction(name, arguments = NULL, assignTo = NULL, wait = 0, thisArg = NULL,  ...)}}{
     calls an existing JavaScript
     function on the web page. Check \code{\link{callFunction}} for more information.
  }
  \item{\code{sendData(variableName, variable, wait = 0, keepAsVector = FALSE, rowwise = TRUE)}}{
     sends data and assigns it to 
     a variable on the web page. Check \code{\link{sendData}} for more information.
  }
  \item{\code{sendHTML(html, wait = 0)}}{
     sends HTML code that will be appended to the web page. Check \code{\link{sendHTML}} for 
     more information.
  }
  \item{\code{setSessionVariables(vars)}}{
     defines variables that will be used (read or rewritten) only by this session. Check 
     \code{\link{setSessionVariables}} for more information.
  }
  \item{\code{getSessionVariable(var)}}{
     returns current value of a variable for this session. \code{var} must be a variable name.
     Throws an error if the requested variable doesn't exist.
  }
  
}
}

