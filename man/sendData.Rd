% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jrc.R
\name{sendData}
\alias{sendData}
\title{Send data to a web page}
\usage{
sendData(
  variableName,
  variable,
  sessionId = NULL,
  wait = 0,
  keepAsVector = FALSE,
  rowwise = TRUE
)
}
\arguments{
\item{variableName}{Name that the variable will have on the server.}

\item{variable}{Variable to send.}

\item{sessionId}{An ID of the session to which the data should be sent. If \code{NULL}, the data will
be sent to all currently active sessions.}

\item{wait}{If \code{wait > 0}, after sending the message, R will wait for a reply for a given number of seconds. 
For this time (or until the reply is received), execution of other commands will be halted. Any incoming message 
from the session will be considered as a reply.}

\item{keepAsVector}{If \code{TRUE}, variables with length 1 will be saved as arrays on the server, otherwise they 
will be converted to atomic types.}

\item{rowwise}{If \code{TRUE}, matrices and data.frames will be transformed into JavaScript Objects or Arrays
rowwise (e.g. a matrix will become an Array of its rows).}
}
\description{
Sends a variable to the server, where it is assigned to the variable with a specified name. A JavaScript function
\code{jrc.sendData(variableName, variable)} can send data back from the server to the current R session. If variable
name hasn't been previously added to the list of the allowed variables, attempt to assign it from the server will
require manual authorization in the R session.
}
\examples{
\donttest{openPage()
x <- 1:100
sendData("x", x)
sendCommand("console.log(x);")
sendCommand("jrc.sendData('x', x.filter(function(e) {return e \% 2 == 0}))")
closePage()}

}
\seealso{
\code{\link{authorize}}, \code{\link{allowVariables}}, \code{\link{sendCommand}},
\code{\link{callFunction}}, \code{\link{sendHTML}}, \code{\link{openPage}}.
}
